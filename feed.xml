<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ccwangzh的小破站</title>
    <link>https://fab.us.kg</link>
    <atom:link href="https://fab.us.kg/feed.xml" rel="self" type="application/rss+xml" />
    <description>记录生活、分享技术</description>
    <language>en-US</language>
    <pubDate>星期四, 8 八月 2024 15:58:54 +0800</pubDate>
    <lastBuildDate>星期四, 8 八月 2024 15:58:54 +0800</lastBuildDate>

    <item>
      <title>Windows上Sublime安装SFTP插件</title>
      <link>https://fab.us.kg/blog/2022/sublime-sftp.html</link>
      <pubDate>星期三, 24 八月 2022 00:00:00 +0800</pubDate>
      <guid isPermaLink="false">blog/2022/sublime-sftp.html</guid>
      	<description>
	&lt;p&gt;众所周知Sublime Text是一款跨平台的文本编辑软件，有强大的插件系统。&lt;br /&gt;
当我们比较频繁的编辑一些服务器上的文件时，一般把服务器上的文件先下载下来再编辑，编辑完成后再上传到服务器上。&lt;br /&gt;
这个过程比较繁琐，效率比较底。Sublime上有一款插件用来同步本地域服务器上的文件，这款插件就是SFTP。&lt;/p&gt;
&lt;p&gt;1、在Package Controll中下载SFTP插件。&lt;br /&gt;
2、在Sublime中新建本地文件夹。&lt;br /&gt;
3、右键点击新建的文件夹，选择Map to Remote，会自动生成配置文件。&lt;br /&gt;
4、编辑配置文件，配置你自己的服务器信息。&lt;/p&gt;
&lt;p&gt;其实做完这些步骤就可以了，但是在我Windows上却依然不行。下面就分析下与到问题以及是怎么解决的。&lt;br /&gt;
点击同步文件夹时提示ssh连接不上。&lt;/p&gt;
&lt;p&gt;未完待续。。。&lt;/p&gt;

	</description>
    </item>
    <item>
      <title>WebDAV客户端配置</title>
      <link>https://fab.us.kg/blog/2022/webdav-js-client.html</link>
      <pubDate>星期二, 19 七月 2022 00:00:00 +0800</pubDate>
      <guid isPermaLink="false">blog/2022/webdav-js-client.html</guid>
      	<description>
	&lt;p&gt;WebDAV （Web-based Distributed Authoring and Versioning） 一种基于 HTTP 1.1协议的通信协议。它扩展了HTTP 1.1，在GET、POST、HEAD等几个HTTP标准方法以外添加了一些新的方法，使应用程序可直接对Web Server直接读写，并支持写文件锁定(Locking)及解锁(Unlock)，还可以支持文件的版本控制，本章使用nginx加载模块webdav实现此功能。&lt;/p&gt;
&lt;p&gt;下载&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;https://github.com/perry-mitchell/webdav-fs
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这个项目中的index.html，放到webdav文件架中用浏览器访问该路径就可以了。&lt;br /&gt;
如果找不到index.html,我这里提供一份html源代码，进攻参考。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
    &amp;lt;head&amp;gt;
        &amp;lt;title&amp;gt;webdav-js&amp;lt;/title&amp;gt;

        &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; type=&amp;quot;text/css&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css&amp;quot;/&amp;gt;
        &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.11.0/styles/default.min.css&amp;quot;/&amp;gt;
        &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.11.0/styles/monokai-sublime.min.css&amp;quot;/&amp;gt;
        &amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;
            h1 .version { opacity: 0; font-size: 0.8em; font-family: monospace; letter-spacing: -5px; transition: .25s opacity linear; }
            h1:hover .version { opacity: .3; }

            pre { position: relative; }
            pre a.btn { display: none; position: absolute; right: 2px; top: 2px; }
            pre:hover a.btn { display: block; }
            .no-clipboard pre:hover a.btn { display: none; }
        &amp;lt;/style&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;a href=&amp;quot;https://github.com/dom111/webdav-js&amp;quot; class=&amp;quot;github-corner&amp;quot; aria-label=&amp;quot;View source on Github&amp;quot;&amp;gt;&amp;lt;svg width=&amp;quot;80&amp;quot; height=&amp;quot;80&amp;quot; viewBox=&amp;quot;0 0 250 250&amp;quot; style=&amp;quot;fill:#C7254E; color:#F9F2F4; position: fixed; top: 0; border: 0; right: 0;&amp;quot; aria-hidden=&amp;quot;true&amp;quot;&amp;gt;&amp;lt;path d=&amp;quot;M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z&amp;quot;&amp;gt;&amp;lt;/path&amp;gt;&amp;lt;path d=&amp;quot;M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2&amp;quot; fill=&amp;quot;currentColor&amp;quot; style=&amp;quot;transform-origin: 130px 106px;&amp;quot; class=&amp;quot;octo-arm&amp;quot;&amp;gt;&amp;lt;/path&amp;gt;&amp;lt;path d=&amp;quot;M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z&amp;quot; fill=&amp;quot;currentColor&amp;quot; class=&amp;quot;octo-body&amp;quot;&amp;gt;&amp;lt;/path&amp;gt;&amp;lt;/svg&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;style&amp;gt;.github-corner:hover .octo-arm{animation:octocat-wave 560ms ease-in-out}@keyframes octocat-wave{0%,100%{transform:rotate(0)}20%,60%{transform:rotate(-25deg)}40%,80%{transform:rotate(10deg)}}@media (max-width:500px){.github-corner:hover .octo-arm{animation:none}.github-corner .octo-arm{animation:octocat-wave 560ms ease-in-out}}&amp;lt;/style&amp;gt;

        &amp;lt;div class=&amp;quot;jumbotron&amp;quot;&amp;gt;
            &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;
                &amp;lt;h1&amp;gt;&amp;lt;code&amp;gt;webdav-js&amp;lt;/code&amp;gt; &amp;lt;span class=&amp;quot;version&amp;quot; title=&amp;quot;Last updated: 2019-11-22&amp;quot;&amp;gt;v2.0.0&amp;lt;/span&amp;gt;&amp;lt;/h1&amp;gt;
                &amp;lt;p&amp;gt;A browser-based WebDAV client, written in JavaScript.&amp;lt;/p&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;
            &amp;lt;section class=&amp;quot;parser panel panel-primary&amp;quot;&amp;gt;
                &amp;lt;div class=&amp;quot;panel-heading panel-heading-lg&amp;quot;&amp;gt;
                    &amp;lt;h2 class=&amp;quot;panel-title panel-title-lg&amp;quot;&amp;gt;Information&amp;lt;/h2&amp;gt;
                &amp;lt;/div&amp;gt;
                &amp;lt;div class=&amp;quot;panel-body&amp;quot;&amp;gt;
                    &amp;lt;p&amp;gt;
                      This simple WebDAV browsing/uploading client is a useful cross-browser addition to the bookmarks
                      of anyone that has to interact with WebDAV. It supports previewing of many common filetypes
                      (syntax highlighting for code, previews for images/videos/fonts), drag and drop file uplaods and
                      history state (for back button navigation).
                    &amp;lt;/p&amp;gt;
                    &amp;lt;p&amp;gt;
                      Whilst this started out as a very simple bookmarklet with some basic styling (and it&apos;s still not
                      much more than that!), I&apos;d like to continue improve it somewhat, adding in new features and using
                      it as a testbed for front-end framework experience. I&apos;d like to investigate more thorough testing
                      using it too, ideally performing full end-to-end testing for all the features currently
                      implemented.
                    &amp;lt;/p&amp;gt;
                    &amp;lt;p&amp;gt;
                      To see how it looks clone the repo, run: &amp;lt;code&amp;gt;docker-compose up&amp;lt;/code&amp;gt; and navigate to
                      &amp;lt;a href=&amp;quot;http://localhost:8080/&amp;quot;&amp;gt;http://localhost:8080/&amp;lt;/a&amp;gt;.
                    &amp;lt;/p&amp;gt;
                    &amp;lt;p&amp;gt;You&apos;re free to use this tool without restriction.&amp;lt;/p&amp;gt;
                &amp;lt;/div&amp;gt;

                &amp;lt;div class=&amp;quot;panel-footer&amp;quot;&amp;gt;
                    &amp;lt;aside class=&amp;quot;options&amp;quot;&amp;gt;
                        &amp;lt;h3&amp;gt;Use it&amp;lt;/h3&amp;gt;
                        &amp;lt;p&amp;gt;
                          There&apos;s a &amp;lt;a href=&amp;quot;https://github.com/dom111/webdav-js&amp;quot;&amp;gt;github repository&amp;lt;/a&amp;gt; where you can
                          download the source that also includes example implementations.
                        &amp;lt;/p&amp;gt;
                        &amp;lt;p&amp;gt;I&apos;ve also created a bookmarklet that you can add to your bookmarks bar:&amp;lt;/p&amp;gt;

                        &amp;lt;p class=&amp;quot;text-center&amp;quot;&amp;gt;
                            &amp;lt;a href=&amp;quot;javascript:%5B%22https%3A//cdn.jsdelivr.net/gh/dom111/webdav-js/assets/css/style-min.css%22%2C%22https%3A//cdn.jsdelivr.net/gh/dom111/webdav-js/src/webdav-min.js%22%5D.forEach%28%28function%28e%2Cs%29%7B/css%24/.test%28e%29%3F%28%28s%3Ddocument.createElement%28%22link%22%29%29.href%3De%2Cs.rel%3D%22stylesheet%22%29%3A%28s%3Ddocument.createElement%28%22script%22%29%29.src%3De%2Cdocument.head.appendChild%28s%29%7D%29%29%3B&amp;quot; class=&amp;quot;btn btn-primary btn-lg&amp;quot;&amp;gt;
                                Browse WebDAV...
                            &amp;lt;/a&amp;gt;
                        &amp;lt;/p&amp;gt;
                        &amp;lt;p&amp;gt;or copy/paste from the below:&amp;lt;/p&amp;gt;
                       &amp;lt;pre class=&amp;quot;copy-paste&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;js&amp;quot;&amp;gt;javascript:[&amp;quot;https://cdn.jsdelivr.net/gh/dom111/webdav-js/assets/css/style-min.css&amp;quot;,&amp;quot;https://cdn.jsdelivr.net/gh/dom111/webdav-js/src/webdav-min.js&amp;quot;].forEach((function(e,s){/css$/.test(e)?((s=document.createElement(&amp;quot;link&amp;quot;)).href=e,s.rel=&amp;quot;stylesheet&amp;quot;):(s=document.createElement(&amp;quot;script&amp;quot;)).src=e,document.head.appendChild(s)}));&amp;lt;/code&amp;gt;&amp;lt;a class=&amp;quot;btn btn-primary btn-xs copy&amp;quot; href=&amp;quot;#&amp;quot; data-clipboard-target=&amp;quot;pre.copy-paste code&amp;quot;&amp;gt;Copy&amp;lt;/a&amp;gt;&amp;lt;/pre&amp;gt;
                    &amp;lt;/aside&amp;gt;
                &amp;lt;/div&amp;gt;
            &amp;lt;/section&amp;gt;

            &amp;lt;footer&amp;gt;
                &amp;lt;p&amp;gt;Copyright &amp;amp;copy; 2012-2019 &amp;lt;a href=&amp;quot;https://dom.hastin.gs/&amp;quot;&amp;gt;Dom Hastings&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;
            &amp;lt;/footer&amp;gt;
        &amp;lt;/div&amp;gt;

        &amp;lt;script src=&amp;quot;https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
        &amp;lt;script src=&amp;quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
        &amp;lt;script src=&amp;quot;https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/1.6.0/clipboard.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
        &amp;lt;script src=&amp;quot;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.11.0/highlight.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

        &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
            hljs.initHighlightingOnLoad();

            if (Clipboard.isSupported()) {
                new Clipboard(&apos;a.copy&apos;);
            }
            else {
                $(&apos;body&apos;).addClass(&apos;no-clipboard&apos;);
            }

            $(&apos;a.copy&apos;).on(&apos;click&apos;, function(event) {
                event.preventDefault();
            });
        &amp;lt;/script&amp;gt;
        &amp;lt;script&amp;gt;
          (function(i,s,o,g,r,a,m){i[&apos;GoogleAnalyticsObject&apos;]=r;i[r]=i[r]||function(){
          (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
          m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
          })(window,document,&apos;script&apos;,&apos;https://www.google-analytics.com/analytics.js&apos;,&apos;ga&apos;);

          ga(&apos;create&apos;, &apos;UA-5273748-7&apos;, &apos;auto&apos;);
          ga(&apos;send&apos;, &apos;pageview&apos;);

        &amp;lt;/script&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;调整nginx配置文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    location /webdav {
        root /home;

        autoindex on;
        autoindex_localtime on;

        dav_methods PUT DELETE MKCOL COPY MOVE;      # DAV支持的请求方法
        dav_ext_methods PROPFIND OPTIONS LOCK UNLOCK;# DAV扩展支持的请求方法
        create_full_put_path  on;                    # 启用创建目录支持
        dav_access user:rw group:r all:r;            # 设置创建的文件及目录的访问权限

        auth_basic &amp;quot;Authorized Users WebDAV&amp;quot;;
        auth_basic_user_file /etc/nginx/webdav.users;
    }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;生成访问密码&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;echo &amp;quot;webdav:$(openssl passwd 123456)&amp;quot; &amp;gt;/etc/nginx/webdav.users
&lt;/code&gt;&lt;/pre&gt;

	</description>
    </item>
    <item>
      <title>Nginx重新编译</title>
      <link>https://fab.us.kg/blog/2022/nginx-rebuild.html</link>
      <pubDate>星期二, 19 七月 2022 00:00:00 +0800</pubDate>
      <guid isPermaLink="false">blog/2022/nginx-rebuild.html</guid>
      	<description>
	&lt;p&gt;因为默认的nginx没有ngx-dav-ext-module，需要重新编译生成&lt;br /&gt;
下载模块&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ~
wget https://codeload.github.com/arut/nginx-dav-ext-module/zip/master \
-O nginx-dav-ext-module-master.zip
unzip nginx-dav-ext-module-master.zip
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;查看nginx版本与配置&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[root@localhost ~]# nginx -v
nginx version: nginx/1.16.1
[root@localhost ~]# nginx -V
nginx version: nginx/1.16.1
built by gcc 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC) 
built with OpenSSL 1.1.1c FIPS  28 May 2019 (running with OpenSSL 1.1.1g FIPS  21 Apr 2020)
TLS SNI support enabled
configure arguments: --prefix=/usr/share/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib64/nginx/modules \
--conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log \
--http-client-body-temp-path=/var/lib/nginx/tmp/client_body --http-proxy-temp-path=/var/lib/nginx/tmp/proxy \
--http-fastcgi-temp-path=/var/lib/nginx/tmp/fastcgi --http-uwsgi-temp-path=/var/lib/nginx/tmp/uwsgi \
--http-scgi-temp-path=/var/lib/nginx/tmp/scgi --pid-path=/run/nginx.pid --lock-path=/run/lock/subsys/nginx \
--user=nginx --group=nginx --with-file-aio --with-ipv6 --with-http_ssl_module --with-http_v2_module \
--with-http_realip_module --with-stream_ssl_preread_module --with-http_addition_module \
--with-http_xslt_module=dynamic --with-http_image_filter_module=dynamic --with-http_sub_module \
--with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module \
--with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module \
--with-http_degradation_module --with-http_slice_module --with-http_stub_status_module \
--with-http_perl_module=dynamic --with-http_auth_request_module --with-mail=dynamic \
--with-mail_ssl_module --with-pcre --with-pcre-jit --with-stream=dynamic --with-stream_ssl_module \
--with-google_perftools_module --with-debug \
--with-cc-opt=&apos;-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -m64 -mtune=generic&apos; \
--with-ld-opt=&apos;-Wl,-z,relro -specs=/usr/lib/rpm/redhat/redhat-hardened-ld -Wl,-E&apos;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;备份Nginx&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd /usr/sbin
mv nginx nginx.bak
cd /etc
cp nginx{,.bak} -rf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装依赖&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yum -y install redhat-rpm-config
yum -y install libxml2 libxml2-dev
yum -y install libxslt-devel
yum -y install gd gd-devel
yum -y install perl-devel perl-ExtUtils-Embed
yum -y install gperftools
yum -y install gcc pcre-devel
yum -y install openssl openssl-devel
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;下载与编译&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ~
wget http://nginx.org/download/nginx-1.16.1.tar.gz -O nginx-1.16.1.tar.gz
tar -xvzf nginx-1.16.1.tar.gz
cd nginx-1.16.1
./configure --prefix=/usr/share/nginx --sbin-path=/usr/sbin/nginx \
--modules-path=/usr/lib64/nginx/modules --conf-path=/etc/nginx/nginx.conf \
--error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log 
--http-client-body-temp-path=/var/lib/nginx/tmp/client_body \
--http-proxy-temp-path=/var/lib/nginx/tmp/proxy \
--http-fastcgi-temp-path=/var/lib/nginx/tmp/fastcgi \
--http-uwsgi-temp-path=/var/lib/nginx/tmp/uwsgi \
--http-scgi-temp-path=/var/lib/nginx/tmp/scgi \
--pid-path=/run/nginx.pid --lock-path=/run/lock/subsys/nginx \
--user=nginx --group=nginx --with-file-aio --with-ipv6 --with-http_ssl_module \
--with-http_v2_module --with-http_realip_module --with-stream_ssl_preread_module \
--with-http_addition_module --with-http_xslt_module=dynamic --with-http_image_filter_module=dynamic \
--with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module \
--with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module \
--with-http_secure_link_module --with-http_degradation_module --with-http_slice_module --with-http_stub_status_module \
--with-http_perl_module=dynamic --with-http_auth_request_module --with-mail=dynamic --with-mail_ssl_module \
--with-pcre --with-pcre-jit --with-stream=dynamic --with-stream_ssl_module --with-google_perftools_module --with-debug \
--with-cc-opt=&apos;-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -m64 -mtune=generic&apos; \
--with-ld-opt=&apos;-Wl,-z,relro -specs=/usr/lib/rpm/redhat/redhat-hardened-ld -Wl,-E&apos; \
--with-http_dav_module --add-module=/root/nginx-dav-ext-module-master
make
cd objs
./nginx -V
cp nginx /usr/sbin
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果运行错误需要进行如下处理&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd /usr/lib64/nginx/modules/
mv ngx_mail_module.so ngx_mail_module.so.bak
cp ~/nginx-1.16.1/objs/ngx_mail_module.so ngx_mail_module.so
mv ngx_stream_module.so ngx_stream_module.so.bak
cp ~/workspace/nginx-1.16.1/objs/ngx_stream_module.so ngx_stream_module.so
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果没有其他问题那就大功告成啦！&lt;/p&gt;

	</description>
    </item>
    <item>
      <title>Aria2c使用简介</title>
      <link>https://fab.us.kg/blog/2022/aria2c-usage.html</link>
      <pubDate>星期二, 19 七月 2022 00:00:00 +0800</pubDate>
      <guid isPermaLink="false">blog/2022/aria2c-usage.html</guid>
      	<description>
	&lt;p&gt;Aria2安装&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yum install aria2
mkdir /home/aria2
touch /home/aria2/aria2.conf
touch /home/aria2/aria2.session

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Aria2配置&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vi /home/aria2/aria2.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;填入以下配置内容&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;##### RPC Options #####

# 开启JSON-RPC/XML-RPC服务，从而能够通过其接口控制aria2，默认为true
enable-rpc=true
# 指定访问端口号，默认6800
rpc-listen-port=6800
# 允许所有访问来源，web控制界面跨域需要，默认false
rpc-allow-origin-all=true
# 允许除local loopback以外的网卡访问，默认false，远程控制需要
rpc-listen-all=true
# 外部访问安全令牌，强烈建议设置token并记住
rpc-secret=xxxxxxxxxx
# 若不设置token，也可通过用户名密码访问，现版本不建议使用
# rpc-user=&amp;lt;username&amp;gt;
# rpc-passwd=&amp;lt;passwd&amp;gt;

##### Advance Options #####

# 以守护进程方式后台运行，默认为false，也可在启动aria2c时加上-D选项达到相同效果
daemon=true
# 磁盘缓存，可设为0禁用，默认16M。
disk-cache=16M
# 磁盘空间分配模式，可选none，prealloc，trunc，falloc，默认prealloc
# 若完整分配，官方建议ext4、NTFS使用falloc快速分配，可以瞬间完成分配
# FAT32、ext3建议使用prealloc，如果此时使用falloc分配时间和prealloc相当，分配时会造成aria2卡顿
file-allocation=falloc

# 使用会话文件保存信息，并能够从意外错误（断电等）错误中恢复
save-session=/home/aria2/aria2.session
# 指定开启时读取会话文件的位置
input-file=/home/aria2/aria2.session
# 定期保存会话，默认0为只在退出时保存
save-session-interval=60

##### Basic Options #####

# 下载路径
dir=/home/webdav
# 日志路径
# log=/home/webdav/aria2c.log
# 最大同时下载任务数量，默认为5
max-concurrent-downloads=20
# 若下载速度低于此值（Byte/s），会被自动暂停，速度可以有K或M等后缀，对BT下载无效
#lowest-speed-limit=0
# 每个下载任务对单个服务器最大的链接数量，默认为1
max-connection-per-server=10
# 任务分块大小，当下载文件大小大于两倍于此设置时，会被分块下载，默认20M
min-split-size=20M
# 任务分块数量，默认为5
split=10
# 可以通过伪装方式进行PT下载，参考下列设置，但请谨慎尝试
# DHT（若torrent禁用，即使设置为true也不会启用）
# enable-dht=false
# enable-dht6=false
# 本地查找（若torrent禁用，即使设置为true也不会启用）
# bt-enable-lpd=false
# 本地peer交换（若torrent禁用，即使设置为true也不会启用）
# enable-peer-exchange=false
# 客户端伪装
peer-id-prefix=-TR2770-
user-agent=Transmission/2.77
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;手工启动服务&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;aria2c -D
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;配置自动服务&lt;br /&gt;
首先：新建服务配置文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vi /etc/systemd/system/aria2c.service
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其次：填写以下配置内容&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[Unit]
Description=Aria2 Service.
After=network-online.target

[Service]
Type=forking
ExecStart=/usr/bin/aria2c --conf-path=/home/aria2/aria2.conf

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;进程管理&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;systemctl daemon-reload # 刷新
systemctl start aria2c  # 启动
systemctl enable aria2c # 开启启动
systemctl status aria2c.service # 查看启动状态
journalctl -xe # 查看启动信息
&lt;/code&gt;&lt;/pre&gt;

	</description>
    </item>
    <item>
      <title>HBase操作命令简介</title>
      <link>https://fab.us.kg/blog/2021/hbase-operate.html</link>
      <pubDate>星期五, 5 二月 2021 00:00:00 +0800</pubDate>
      <guid isPermaLink="false">blog/2021/hbase-operate.html</guid>
      	<description>
	&lt;p&gt;HBase – Hadoop Database，是一个高可靠性、高性能、面向列、可伸缩的分布式存储系统，利用HBase技术可在廉价PC Server上搭建起大规模结构化存储集群。&lt;br /&gt;
下面简单介绍下HBase的操作命令&lt;/p&gt;
&lt;h3&gt;打开Hbase命令交互&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;hbase shell
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;显示命令帮助信息&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;help
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;列出所有表&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;list
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;创建表名为habse_test，列簇为cf的表&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;create &apos;habse_test&apos;,&apos;cf&apos;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;查看表名为habse_test的表的信息&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;describe &apos;habse_test&apos;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;禁用表&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;disable &apos;habse_test&apos;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;删除表&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;drop &apos;habse_test&apos;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;向表中插入row_id为1，列为cf:col1，值为2的数据&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;put &apos;habse_test&apos;,&apos;1&apos;,&apos;cf:col1&apos;,&apos;2&apos;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;从表中查询row_id为1的所有信息&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;get &apos;habse_test&apos;,&apos;1&apos;
&lt;/code&gt;&lt;/pre&gt;

	</description>
    </item>
    <item>
      <title>rsync同步工具</title>
      <link>https://fab.us.kg/blog/2021/rsync-cmd.html</link>
      <pubDate>星期四, 21 一月 2021 00:00:00 +0800</pubDate>
      <guid isPermaLink="false">blog/2021/rsync-cmd.html</guid>
      	<description>
	&lt;p&gt;rsync命令是一个远程数据同步工具，可通过LAN/WAN快速同步多台主机间的文件。rsync使用所谓的“rsync算法”来使本地和远程两个主机之间的文件达到同步，这个算法只传送两个文件的不同部分，而不是每次都整份传送，因此速度相当快。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;rsync功能
&lt;ul&gt;
&lt;li&gt;作为命令，实现本地-远程文件同步&lt;/li&gt;
&lt;li&gt;作为服务，实现本地-远程文件同步&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;rsync特点
&lt;ul&gt;
&lt;li&gt;可以镜像保存整个目录树和文件系统&lt;/li&gt;
&lt;li&gt;可以保留原有的权限(permission,mode)，owner,group,时间(修改时间,modify time)，软硬链接，文件acl,文件属性(attributes)信息等&lt;/li&gt;
&lt;li&gt;传输效率高，使用同步算法，只比较变化的&lt;/li&gt;
&lt;li&gt;支持匿名传输，方便网站镜像；也可以做验证，加强安全&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;rsync同类服务
&lt;ul&gt;
&lt;li&gt;sync 同步：刷新文件系统缓存，强制将修改过的数据块写入磁盘，并且更新超级块。&lt;/li&gt;
&lt;li&gt;async 异步：将数据先放到缓冲区，再周期性（一般是30s）的去同步到磁盘。&lt;/li&gt;
&lt;li&gt;rsync 远程同步：remote synchronous&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;rsync -av /etc/passwd /tmp/1.txt&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/upload/2021/01/21/1.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;h4&gt;rsync -av /tmp/1.txt 192.168.36.131:/tmp/2.txt&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/upload/2021/01/21/2.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/upload/2021/01/21/3.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;h3&gt;rsync格式&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;rsync [OPTION] … SRC   DEST
rsync [OPTION] … SRC   [user@]host:DEST
rsync [OPTION] … [user@]host:SRC   DEST
rsync [OPTION] … SRC   [user@]host::DEST
rsync [OPTION] … [user@]host::SRC   DEST
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;rsync常用选项&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;-a 包含-rtplgoD
-r 同步目录时要加上，类似cp时的-r选项
-v 同步时显示一些信息，让我们知道同步的过程
-l 保留软连接
-L 加上该选项后，同步软链接时会把源文件给同步
-p 保持文件的权限属性
-o 保持文件的属主
-g 保持文件的属组
-D 保持设备文件信息
-t 保持文件的时间属性
--delete 删除DEST中SRC没有的文件
--exclude 过滤指定文件，如--exclude “logs”会把文件名包含logs的文件或者目录过滤掉，不同步
-P 显示同步过程，比如速率，比-v更加详细
-u 加上该选项后，如果DEST中的文件比SRC新，则不同步
-z 传输时压缩
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;rsync通过ssh方式同步&lt;/h3&gt;
&lt;p&gt;推文件：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/upload/2021/01/21/4.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;拉文件：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/upload/2021/01/21/5.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;-e &amp;quot;ssh -p 22&amp;quot; 指定端口：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/upload/2021/01/21/6.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;h3&gt;rsync 通过服务的方式同步&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;1.编辑配置文件/etc/rsyncd.conf
2.启动服务rsync --daemon
3.格式：rsync -av test1/ test@192.168.36.130::test/
&lt;/code&gt;&lt;/pre&gt;
&lt;h6&gt;rsyncd.conf样例：&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;port=873
log file=/var/log/rsync.log
pid file=/var/run/rsyncd.pid
address=192.168.36.130
[test]
path=/tmp/rsync
use chroot=true
max connections=4
read only=no
list=true
uid=root
gid=root
auth users=test
secrets file=/etc/rsyncd.passwd
hosts allow=192.168.36.131 （多个ip以空格隔开，也可以写ip段：192.168.36.0/24）
&lt;/code&gt;&lt;/pre&gt;
&lt;h6&gt;rsyncd.conf配置文件详解&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;port：指定在哪个端口启动rsyncd服务，默认是873端口。
log file：指定日志文件。
pid file：指定pid文件，这个文件的作用涉及服务的启动、停止等进程管理操作。
address：指定启动rsyncd服务的IP。假如你的机器有多个IP，就可以指定由其中一个启动rsyncd服务，如果不指定该参数，默认是在全部IP上启动。
[]：指定模块名，里面内容自定义。
path：指定数据存放的路径。
use chroot true|false：表示在传输文件前首先chroot到path参数所指定的目录下。这样做的原因是实现额外的安全防护，但缺点是需要以roots权限，并且不能备份指向外部的符号连接所指向的目录文件。默认情况下chroot值为true，如果你的数据当中有软连接文件，阿铭建议你设置成false。
max connections：指定最大的连接数，默认是0，即没有限制。
read only ture|false：如果为true，则不能上传到该模块指定的路径下。
list：表示当用户查询该服务器上的可用模块时，该模块是否被列出，设定为true则列出，false则隐藏。
uid/gid：指定传输文件时以哪个用户/组的身份传输。
auth users：指定传输时要使用的用户名。
secrets file：指定密码文件，该参数连同上面的参数如果不指定，则不使用密码验证。注意该密码文件的权限一定要是600。格式：用户名:密码
hosts allow：表示被允许连接该模块的主机，可以是IP或者网段，如果是多个，中间用空格隔开。 
当设置了auth users和secrets file后，客户端连服务端也需要用用户名密码了，若想在命令行中带上密码，可以设定一个密码文件
rsync -avL test@192.168.36.130::test/test1/  /tmp/test8/ --password-file=/etc/pass 
其中/etc/pass内容就是一个密码，权限要改为600
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;把端口改了之后需要使用--port 指定端口&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/upload/2021/01/21/7.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/upload/2021/01/21/8.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;客服端配置密码文件可不用输入密码：&lt;/p&gt;
&lt;p&gt;这里密码文件格式只有密码&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/upload/2021/01/21/9.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

	</description>
    </item>

  </channel> 
</rss>
